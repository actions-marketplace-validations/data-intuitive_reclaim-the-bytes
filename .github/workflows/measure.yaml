name: Measure effect of CI
on:
  workflow_dispatch:
  push:
  schedule:
    # daily
    - cron: "16 16 * * *"

jobs:
  measure:
    name: Measure effects
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
        to-remove:
          - dotnet
          - android
          - haskell
          - codeql
          - docker-images
          - large-packages

    steps:
      - name: Check out action
        uses: actions/checkout@v3
        with:
          path: ./.github/actions/measurements

      - name: Record starting conditions
        id: before
        run: |
          echo "disk_free=$(df --output=avail --sync -BG "${{ github.workspace }}" | tail -1 | sed 's/[^0-9]*//g')" >> $GITHUB_OUTPUT
          printf 'timestamp=%(%s)T\n' >> "$GITHUB_OUTPUT"

      - name: Reclaim the bytes
        uses: ./.github/actions/measurements
        with:
          remove-dotnet: ${{ matrix.to-remove == 'dotnet' }}
          remove-android: ${{ matrix.to-remove == 'android' }}
          remove-haskell: ${{ matrix.to-remove == 'haskell' }}
          remove-codeql: ${{ matrix.to-remove == 'codeql' }}
          remove-docker-images: ${{ matrix.to-remove == 'docker-images' }}
          remove-large-packages: ${{ matrix.to-remove == 'large-packages' }}

      - name: Record stopping conditions
        id: after
        run: |
          echo "disk_free=$(df --output=avail --sync -BG "${{ github.workspace }}" | tail -1 | sed 's/[^0-9]*//g')" >> $GITHUB_OUTPUT
          printf 'timestamp=%(%s)T\n' >> "$GITHUB_OUTPUT"

      - name: Create measurements json
        id: json
        run: |
          OUTPUT_JSON="/tmp/single_${{matrix.os}}_${{matrix.to-remove}}.json"
          echo "output=$OUTPUT_JSON" >> $GITHUB_OUTPUT

          DURATION=$((${{ steps.after.outputs.timestamp }} - ${{ steps.before.outputs.timestamp }}))
          FREED_DISK=$((${{ steps.after.outputs.disk_free }} - ${{ steps.before.outputs.disk_free }}))
          
          echo "Free space before: ${{ steps.before.outputs.disk_free }}G"
          echo "Free space after : ${{ steps.after.outputs.disk_free }}G"
          echo "Space freed      : ${FREED_DISK}G"
          echo "Duration         : ${DURATION}s"

          cat > "$OUTPUT_JSON" << HERE
          [{
            "os": "${{ matrix.os }}",
            "to_remove": "${{ matrix.to-remove}}",
            "space_free_before": "${{ steps.before.outputs.disk_free }}",
            "space_free_after": "${{ steps.after.outputs.disk_free }}",
            "space_freed": "${FREED_DISK}",
            "duration": "${DURATION}"
          }]
          HERE

      - name: Upload disk space report
        uses: actions/upload-artifact@v3
        with:
          name: measurement_jsons
          path: ${{ steps.json.outputs.output }}

  collect-jsons:
    name: Collect jsons
    runs-on: ubuntu-latest
    needs: measure
    env:
      JSON_DIR: /tmp/jsons

    steps:
      - name: Download single jsons
        uses: actions/download-artifact@v3
        with:
          name: measurement_jsons
          path: ${{ env.JSON_DIR }}

      - name: Merge json files
        run: |
          tree "${{ env.JSON_DIR }}"

          jq -s add ${{ env.JSON_DIR }}/single_*.json > "${{ env.JSON_DIR }}/measurements.json"

          tree "${{ env.JSON_DIR }}"

      - name: Upload merged json
        uses: actions/upload-artifact@v3
        with:
          name: output
          path: "${{ env.JSON_DIR }}/measurements.json"
